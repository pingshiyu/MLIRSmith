mlir-opt: /home/jacob/projects/MLIRSmith/mlir/lib/IR/PatternMatch.cpp:270: virtual void mlir::RewriterBase::replaceOp(mlir::Operation*, mlir::ValueRange): Assertion `op->getNumResults() == newValues.size() && "incorrect # of replacement values"' failed.
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  mlir-opt        0x0000562e7d857bdb llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 59
1  mlir-opt        0x0000562e7d8549cc
2  libpthread.so.0 0x00007fa146298980
3  libc.so.6       0x00007fa144ec5e87 gsignal + 199
4  libc.so.6       0x00007fa144ec77f1 abort + 321
5  libc.so.6       0x00007fa144eb73fa
6  libc.so.6       0x00007fa144eb7472
7  mlir-opt        0x0000562e801d01dd mlir::RewriterBase::replaceOp(mlir::Operation*, mlir::ValueRange) + 541
8  mlir-opt        0x0000562e7e319b76 mlir::linalg::generalizeNamedOp(mlir::RewriterBase&, mlir::linalg::LinalgOp) + 1942
9  mlir-opt        0x0000562e7e31a22b
10 mlir-opt        0x0000562e829a5bd4 mlir::PatternApplicator::matchAndRewrite(mlir::Operation*, mlir::PatternRewriter&, llvm::function_ref<bool (mlir::Pattern const&)>, llvm::function_ref<void (mlir::Pattern const&)>, llvm::function_ref<mlir::LogicalResult (mlir::Pattern const&)>) + 2884
11 mlir-opt        0x0000562e8008dc50
12 mlir-opt        0x0000562e800915b1 mlir::applyPatternsAndFoldGreedily(mlir::Region&, mlir::FrozenRewritePatternSet const&, mlir::GreedyRewriteConfig, bool*) + 3153
13 mlir-opt        0x0000562e7e318e4a
14 mlir-opt        0x0000562e7ffcf301 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 1297
15 mlir-opt        0x0000562e7ffcf6ba mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 250
16 mlir-opt        0x0000562e7ffcfab2
17 mlir-opt        0x0000562e7ffcfc3f
18 mlir-opt        0x0000562e7ffc4b11 std::_Function_handler<void (), llvm::ThreadPool::createTaskAndFuture(std::function<void ()>)::'lambda'()>::_M_invoke(std::_Any_data const&) + 49
19 mlir-opt        0x0000562e82b6d0b8 llvm::ThreadPool::processTasks(llvm::ThreadPoolTaskGroup*) + 552
20 mlir-opt        0x0000562e82b6e0b3
21 libpthread.so.0 0x00007fa14628d6db
22 libc.so.6       0x00007fa144fa861f clone + 63
Aborted
